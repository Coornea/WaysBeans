{"ast":null,"code":"var _jsxFileName = \"/home/physicoornea/Documents/Documents/Waysbeans-main/Client/src/context/orderContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderContext = /*#__PURE__*/createContext();\nconst initialState = {\n  products: [],\n  subtotal: 0\n};\n\nconst reducer = (state, action) => {\n  const {\n    type,\n    payload,\n    total\n  } = action;\n\n  switch (type) {\n    case 'ADD_CART':\n      return {\n        products: payload,\n        subtotal: total\n      };\n\n    case 'EMPTY_CART':\n      return {\n        products: [],\n        subtotal: 0\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const OrderContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [orderedMenus, setOrderedMenus] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: [orderedMenus, setOrderedMenus],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderContextProvider, \"Tk8dRCKw8KIC3xL9Zy9r4Efgfdo=\");\n\n_c = OrderContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderContextProvider\");","map":{"version":3,"sources":["/home/physicoornea/Documents/Documents/Waysbeans-main/Client/src/context/orderContext.js"],"names":["createContext","useReducer","OrderContext","initialState","products","subtotal","reducer","state","action","type","payload","total","Error","OrderContextProvider","children","orderedMenus","setOrderedMenus"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;AAEP,MAAMG,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BH,MAAjC;;AAEA,UAAQC,IAAR;AACE,SAAK,UAAL;AACE,aAAO;AACLL,QAAAA,QAAQ,EAAEM,OADL;AAELL,QAAAA,QAAQ,EAAEM;AAFL,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO;AACLP,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF;AACE,YAAM,IAAIO,KAAJ,EAAN;AAZJ;AAcD,CAjBD;;AAmBA,OAAO,MAAMC,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,UAAU,CAACK,OAAD,EAAUH,YAAV,CAAlD;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACY,YAAD,EAAeC,eAAf,CAA9B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useReducer } from 'react';\n\nexport const OrderContext = createContext();\n\nconst initialState = {\n  products: [],\n  subtotal: 0\n};\n\nconst reducer = (state, action) => {\n  const { type, payload, total } = action;\n\n  switch (type) {\n    case 'ADD_CART':\n      return {\n        products: payload,\n        subtotal: total\n      };\n    case 'EMPTY_CART':\n      return {\n        products: [],\n        subtotal: 0\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const OrderContextProvider = ({ children }) => {\n  const [orderedMenus, setOrderedMenus] = useReducer(reducer, initialState);\n\n  return (\n    <OrderContext.Provider value={[orderedMenus, setOrderedMenus]}>\n      {children}\n    </OrderContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}