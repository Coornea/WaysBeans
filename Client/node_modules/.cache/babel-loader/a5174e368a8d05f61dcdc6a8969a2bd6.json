{"ast":null,"code":"var _jsxFileName = \"/home/physicoornea/Documents/Documents/Waysbeans/Client/src/components/Transactions.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"../styles/TransactionTable.module.css\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Navbar from \"./Navbar\"; //context\n\nimport { UserContext } from \"../context/userContext\"; //API config\n\nimport { API } from \"../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Transactions() {\n  _s();\n\n  const [state, dispatch] = useContext(UserContext);\n  const [datas, setDatas] = useState([]);\n\n  const getTransactions = async () => {\n    try {\n      await API.get(\"/transactions\").then(response => {\n        const temp = response.data.data.transactions.map(elem => {\n          return {\n            id: elem.id,\n            name: elem.name,\n            address: elem.address,\n            order: elem.products[0].name,\n            status: elem.status\n          };\n        });\n        console.log(temp);\n        setDatas(temp);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //did mount -> get transactions\n\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  useEffect(() => {\n    getTransactions();\n  }, [state]); //logout\n\n  const logout = () => dispatch({\n    type: \"LOGOUT\",\n    payload: \"\"\n  }); //approve & Cancel transactions\n\n\n  const approveTransaction = async dataID => {\n    try {\n      //Configuration Content-type\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }; //prepare body req\n\n      const status = {\n        status: \"on the way\"\n      };\n      const body = JSON.stringify(status); //update transaction\n\n      await API.patch(`/transaction/${dataID}`, body, config); //change datas state\n\n      const currentDatas = datas.map(elem => {\n        if (elem.id === dataID) {\n          elem.status = \"on the way\";\n        }\n\n        return elem;\n      });\n      setDatas(currentDatas);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const cancelTransaction = async dataID => {\n    try {\n      //Configuration Content-type\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }; //prepare body req\n\n      const status = {\n        status: \"cancel\"\n      };\n      const body = JSON.stringify(status);\n      await API.patch(`/transaction/${dataID}`, body, config); //change datas state\n\n      const currentDatas = datas.map(elem => {\n        if (elem.id === dataID) {\n          elem.status = \"cancel\";\n        }\n\n        return elem;\n      });\n      setDatas(currentDatas);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Transaction,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Income Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: styles.th,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.no,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.name,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.address,\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.order,\n              children: \"Products Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.status,\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.action,\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), datas.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.order\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), data.status === \"waiting approve\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: \"#FF9900\"\n                  },\n                  children: \"Waiting Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: styles.actionTd,\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styles.cancelBtn,\n                    onClick: () => cancelTransaction(data.id),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styles.ApproveBtn,\n                    onClick: () => approveTransaction(data.id),\n                    children: \"Approve\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : data.status === \"on the way\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: \"#00D1FF\"\n                  },\n                  children: \"On The Way\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: styles.actionTd,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/done.png\",\n                    alt: \"status pict\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : data.status === \"success\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: \"#78A85A\"\n                  },\n                  children: \"Success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: styles.actionTd,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/done.png\",\n                    alt: \"status pict\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: \"#E83939\"\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: styles.actionTd,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/cancel.png\",\n                    alt: \"status pict\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transactions, \"0/6AVKOFiXo+Ba3dsFU9C5Fom4c=\");\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/home/physicoornea/Documents/Documents/Waysbeans/Client/src/components/Transactions.js"],"names":["styles","React","useState","useContext","useEffect","Navbar","UserContext","API","Transactions","state","dispatch","datas","setDatas","getTransactions","get","then","response","temp","data","transactions","map","elem","id","name","address","order","products","status","console","log","error","logout","type","payload","approveTransaction","dataID","config","headers","body","JSON","stringify","patch","currentDatas","cancelTransaction","Transaction","th","no","action","index","color","actionTd","cancelBtn","ApproveBtn"],"mappings":"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","sourcesContent":["import styles from \"../styles/TransactionTable.module.css\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\n\n//context\nimport { UserContext } from \"../context/userContext\";\n\n//API config\nimport { API } from \"../config/api\";\n\nexport default function Transactions() {\n  const [state, dispatch] = useContext(UserContext);\n  const [datas, setDatas] = useState([]);\n\n  const getTransactions = async () => {\n    try {\n      await API.get(\"/transactions\").then((response) => {\n        const temp = response.data.data.transactions.map((elem) => {\n          return {\n            id: elem.id,\n            name: elem.name,\n            address: elem.address,\n            order: elem.products[0].name,\n            status: elem.status,\n          };\n        });\n        console.log(temp);\n        setDatas(temp);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //did mount -> get transactions\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  useEffect(() => {\n    getTransactions();\n  }, [state]);\n\n  //logout\n  const logout = () =>\n    dispatch({\n      type: \"LOGOUT\",\n      payload: \"\",\n    });\n\n  //approve & Cancel transactions\n  const approveTransaction = async (dataID) => {\n    try {\n      //Configuration Content-type\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      //prepare body req\n      const status = {\n        status: \"on the way\",\n      };\n      const body = JSON.stringify(status);\n\n      //update transaction\n      await API.patch(`/transaction/${dataID}`, body, config);\n\n      //change datas state\n      const currentDatas = datas.map((elem) => {\n        if (elem.id === dataID) {\n          elem.status = \"on the way\";\n        }\n        return elem;\n      });\n      setDatas(currentDatas);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const cancelTransaction = async (dataID) => {\n    try {\n      //Configuration Content-type\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      //prepare body req\n      const status = {\n        status: \"cancel\",\n      };\n      const body = JSON.stringify(status);\n\n      await API.patch(`/transaction/${dataID}`, body, config);\n\n      //change datas state\n      const currentDatas = datas.map((elem) => {\n        if (elem.id === dataID) {\n          elem.status = \"cancel\";\n        }\n        return elem;\n      });\n      setDatas(currentDatas);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div>\n        <div className={styles.Transaction}>\n          <h4>Income Transaction</h4>\n          <table>\n            <tr className={styles.th}>\n              <td className={styles.no}>No</td>\n              <td className={styles.name}>Name</td>\n              <td className={styles.address}>Address</td>\n              <td className={styles.order}>Products Order</td>\n              <td className={styles.status}>Status</td>\n              <td className={styles.action}>Action</td>\n            </tr>\n            {datas.map((data, index) => {\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{data.name}</td>\n                  <td>{data.address}</td>\n                  <td>{data.order}</td>\n                  {data.status === \"waiting approve\" ? (\n                    <>\n                      <td style={{ color: \"#FF9900\" }}>Waiting Approve</td>\n                      <td className={styles.actionTd}>\n                        <button\n                          className={styles.cancelBtn}\n                          onClick={() => cancelTransaction(data.id)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          className={styles.ApproveBtn}\n                          onClick={() => approveTransaction(data.id)}\n                        >\n                          Approve\n                        </button>\n                      </td>\n                    </>\n                  ) : data.status === \"on the way\" ? (\n                    <>\n                      <td style={{ color: \"#00D1FF\" }}>On The Way</td>\n                      <td className={styles.actionTd}>\n                        <img src=\"./images/done.png\" alt=\"status pict\" />\n                      </td>\n                    </>\n                  ) : data.status === \"success\" ? (\n                    <>\n                      <td style={{ color: \"#78A85A\" }}>Success</td>\n                      <td className={styles.actionTd}>\n                        <img src=\"./images/done.png\" alt=\"status pict\" />\n                      </td>\n                    </>\n                  ) : (\n                    <>\n                      <td style={{ color: \"#E83939\" }}>Cancel</td>\n                      <td className={styles.actionTd}>\n                        <img src=\"./images/cancel.png\" alt=\"status pict\" />\n                      </td>\n                    </>\n                  )}\n                </tr>\n              );\n            })}\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}