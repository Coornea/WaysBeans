{"ast":null,"code":"var _jsxFileName = \"/home/physicoornea/Documents/Documents/Waysbeans-main/Client/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"../components/Navbar\";\nimport styles from \"../styles/Profile.module.css\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\"; //API config\n\nimport { API } from \"../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const [profile, setProfile] = useState([]);\n  const [transaction, setTransaction] = useState([]);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; //get detail user\n\n  const getUser = async () => {\n    try {\n      const response = await API.get('/user'); //console.log(response.data.data.user)\n\n      setProfile(response.data.data.user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getTransactions = async () => {\n    try {\n      const response = await API.get('/my-transactions'); //console.log(response)\n\n      const temp = response.data.data.transactions.map(elem => {\n        return {\n          id: elem.id,\n          photo: `http://localhost:5000/uploads/${elem.products[0].photo}`,\n          name: elem.products[0].name,\n          price: elem.products[0].price,\n          orderQuantity: elem.products[0].orderQuantity,\n          subtotal: elem.products[0].price * elem.products[0].orderQuantity,\n          status: elem.status,\n          day: days[new Date(`${months[elem.date.split(\"T\")[0].split('-')[1] - 1]} ${elem.date.split(\"T\")[0].split('-')[2]}, ${elem.date.split(\"T\")[0].split('-')[0]}`).getDay()],\n          date: `${elem.date.split(\"T\")[0].split(\"-\")[2]} ${months[elem.date.split(\"T\")[0].split(\"-\")[1] - 1]} ${elem.date.split(\"T\")[0].split(\"-\")[0]}`\n        };\n      });\n      setTransaction(temp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n    getTransactions();\n  }, []);\n\n  const finishTransaction = async dataID => {\n    try {\n      //Configuration Content-type\n      const config = {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }; //prepare body req\n\n      const status = {\n        status: \"success\"\n      };\n      const body = JSON.stringify(status); //update transaction\n\n      await API.patch(`/transaction/${dataID}`, body, config); //change datas state\n\n      const currentDatas = transaction.map(elem => {\n        if (elem.id === dataID) {\n          elem.status = \"success\";\n        }\n\n        return elem;\n      });\n      setTransaction(currentDatas);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mainProfile,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.myProfile,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoPerson,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile.photo,\n              alt: \"Profil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: profile.fullname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: profile.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.products,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"My Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), transaction.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.product,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.detailProduct,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: elem.photo,\n                alt: \"menu pict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.number,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.productName,\n                  children: elem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.date,\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: elem.day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 48\n                  }, this), \", \", elem.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.productPrice,\n                  children: [\"Price : Rp \", elem.price.toLocaleString('id-ID')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.productQty,\n                  children: [\"Qty : \", elem.orderQuantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.subTotal,\n                  children: [\"Sub Total : \", elem.subtotal.toLocaleString('id-ID')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.productr,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/icon.png\",\n                alt: \"waysbeans icon\",\n                className: styles.wbIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/qr mock.png\",\n                alt: \"qr\",\n                className: styles.qr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), elem.status === 'success' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.status,\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this) : elem.status === 'waiting approve' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.statusw,\n                children: elem.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this) : elem.status === 'on the way' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.statuso,\n                onClick: () => finishTransaction(elem.id),\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.statusc,\n                children: \"Canceled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, elem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"y4hVI6tM1p8jJCQRlI9DKVqtkeg=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/physicoornea/Documents/Documents/Waysbeans-main/Client/src/pages/Profile.js"],"names":["Navbar","styles","Link","React","useState","useEffect","API","Profile","profile","setProfile","transaction","setTransaction","months","days","getUser","response","get","data","user","error","console","log","getTransactions","temp","transactions","map","elem","id","photo","products","name","price","orderQuantity","subtotal","status","day","Date","date","split","getDay","finishTransaction","dataID","config","headers","body","JSON","stringify","patch","currentDatas","page","mainProfile","myProfile","infoPerson","fullname","email","product","detailProduct","number","productName","productPrice","toLocaleString","productQty","subTotal","productr","wbIcon","qr","statusw","statuso","statusc"],"mappings":"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","sourcesContent":["import Navbar from \"../components/Navbar\";\nimport styles from \"../styles/Profile.module.css\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\n//API config\nimport { API } from \"../config/api\";\n\nfunction Profile() {\n  const [profile, setProfile] = useState([]);\n  const [transaction, setTransaction] = useState([]);\n  const months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n           \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n  const days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n  \n  //get detail user\n  const getUser = async () => {\n    try {\n      const response = await API.get('/user')\n      //console.log(response.data.data.user)\n      setProfile(response.data.data.user)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const getTransactions = async () => {\n    try {\n      const response = await API.get('/my-transactions')\n      //console.log(response)\n      const temp = response.data.data.transactions.map(elem => {\n        return {\n          id: elem.id,\n          photo: `http://localhost:5000/uploads/${elem.products[0].photo}`,\n          name: elem.products[0].name,\n          price: elem.products[0].price,\n          orderQuantity: elem.products[0].orderQuantity,\n          subtotal: elem.products[0].price * elem.products[0].orderQuantity,\n          status: elem.status,\n          day: days[(new Date(`${months[elem.date.split(\"T\")[0].split('-')[1]-1]} ${elem.date.split(\"T\")[0].split('-')[2]}, ${elem.date.split(\"T\")[0].split('-')[0]}`)).getDay()],\n          date: `${elem.date.split(\"T\")[0].split(\"-\")[2]} ${months[elem.date.split(\"T\")[0].split(\"-\")[1]-1]} ${elem.date.split(\"T\")[0].split(\"-\")[0]}`,\n        }\n      })\n      setTransaction(temp)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getUser();\n    getTransactions();\n  }, []);\n\n  const finishTransaction = async (dataID) => {\n    try{\n      //Configuration Content-type\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n        },\n      };\n\n      //prepare body req\n      const status = {\n        status: \"success\"\n      }\n      const body = JSON.stringify(status);\n\n      //update transaction\n      await API.patch(`/transaction/${dataID}`, body, config);\n      \n      //change datas state\n      const currentDatas = transaction.map(\n        elem => {\n          if (elem.id === dataID) {\n            elem.status = \"success\"\n          }\n          return elem \n        }\n      )\n      setTransaction(currentDatas);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <div className={styles.page}>\n        <div className={styles.mainProfile}>\n          <div className={styles.myProfile}>\n            <h4>My Profile</h4>\n            <div className={styles.infoPerson}>\n              <img src={profile.photo} alt=\"Profil\" />\n              <article>\n                <h5>Full Name</h5>\n                <p>{profile.fullname}</p>\n                <h5>Email</h5>\n                <p>{profile.email}</p>\n              </article>\n            </div>\n          </div>\n        </div>\n        <div className={styles.products}>\n          <h4>My Transaction</h4>\n          {transaction.map(elem =>{\n            return(\n              <div className={styles.product} key={elem.id}>\n                <div className={styles.detailProduct}>\n                  <img src={elem.photo} alt=\"menu pict\" />\n                  <div className={styles.number}>\n                    <p className={styles.productName}>{elem.name}</p>\n                    <p className={styles.date}><b>{elem.day}</b>, {elem.date}</p>\n                    <p className={styles.productPrice}>Price : Rp {elem.price.toLocaleString('id-ID')}</p>\n                    <p className={styles.productQty}>Qty : {elem.orderQuantity}</p>\n                    <p className={styles.subTotal}>Sub Total : {(elem.subtotal).toLocaleString('id-ID')}</p>\n                  </div>\n                </div>\n                <div className={styles.productr}>\n                  <img src='images/icon.png' alt=\"waysbeans icon\" className={styles.wbIcon}/>\n                  <img src='images/qr mock.png' alt=\"qr\" className={styles.qr}/>\n                  {elem.status === 'success' ? (\n                    <div className={styles.status}>Success</div>\n                  ) : (elem.status === 'waiting approve' ? (\n                    <div className={styles.statusw}>{elem.status}</div>\n                  ) : (elem.status === 'on the way' ? (\n                    <button className={styles.statuso} onClick={() => finishTransaction(elem.id)}>Completed</button>\n                  ) : (\n                    <div className={styles.statusc}>Canceled</div>\n                  )))}\n                </div>\n              </div>    \n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}