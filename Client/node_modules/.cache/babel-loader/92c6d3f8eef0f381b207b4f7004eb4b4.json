{"ast":null,"code":"var _jsxFileName = \"/home/physicoornea/Documents/Documents/Waysbeans-main/Client/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\n//import \"./Header.css\";\nimport styles from \"../styles/Navbar.module.css\";\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal, Dropdown, NavDropdown, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\"; //context\n\nimport { UserContext } from \"../context/userContext\";\nimport { OrderContext } from \"../context/orderContext\"; //API config\n\nimport { API, setAuthToken } from \"../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  let navigate = useNavigate(); //state\n\n  const [register, setRegister] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [state, dispatch] = useContext(UserContext);\n  const [orderedMenus, setOrderedMenus] = useContext(OrderContext); //const [counterCart, setCounterCart] = useState(0);\n\n  const [message, setMessage] = useState(null); //Register modal toggle\n\n  const handRegClose = () => setRegister(false);\n\n  const handReg = () => setRegister(true); //login modal toggle\n\n\n  const handLogClose = () => setLogin(false);\n\n  const handLog = () => setLogin(true); //register form (state)\n  // const [regForm, setRegForm] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  //   fullname: \"\",\n  // });\n  // const { email, password, fullname } = regForm;\n  // //login form (state)\n  // const [logForm, setLogForm] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n  // const { logEmail, logPassword } = logForm;\n  // const handleRegChange = (e) => {\n  //   setRegForm({\n  //     ...regForm,\n  //     [e.target.name]: e.target.value,\n  //   });\n  // };\n  // const handleLogChange = (e) => {\n  //   setLogForm({\n  //     ...logForm,\n  //     [e.target.name]: e.target.value,\n  //   });\n  // };\n  // //register handle\n  // const handleRegister = async (e) => {\n  //   try {\n  //     e.preventDefault();\n  //     // Create Configuration Content-type\n  //     const config = {\n  //       headers: {\n  //         \"Content-type\": \"application/json\",\n  //       },\n  //     };\n  //     // Convert form data to string\n  //     const body = JSON.stringify(regForm);\n  //     // Insert data user to database\n  //     const response = await API.post(\"/register\", body, config);\n  //     //close & empty modal\n  //     setRegister(false);\n  //     setRegForm({\n  //       email: \"\",\n  //       password: \"\",\n  //       fullName: \"\",\n  //     });\n  //     //notification\n  //     if (response.data.status === \"success\") {\n  //       const alert = (\n  //         <Alert\n  //           variant=\"success\"\n  //           onClose={() => setMessage(null)}\n  //           className=\"py-2 mb-0\"\n  //           dismissible\n  //         >\n  //           Registration Success\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     } else {\n  //       const alert = (\n  //         <Alert\n  //           variant=\"danger\"\n  //           onClose={() => setMessage(null)}\n  //           className=\"py-1\"\n  //           dismissible\n  //         >\n  //           Failed\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     }\n  //   } catch (error) {\n  //     const alert = (\n  //       <Alert\n  //         variant=\"danger\"\n  //         onClose={() => setMessage(null)}\n  //         className=\"py-1\"\n  //         dismissible\n  //       >\n  //         Failed\n  //       </Alert>\n  //     );\n  //     setMessage(alert);\n  //     console.log(error);\n  //   }\n  // };\n  // //login handle\n  // const handleLogin = async (e) => {\n  //   try {\n  //     e.preventDefault();\n  //     // Create Configuration Content-type\n  //     const config = {\n  //       headers: {\n  //         \"Content-type\": \"application/json\",\n  //       },\n  //     };\n  //     // Convert form data to string\n  //     const body = JSON.stringify(logForm);\n  //     // Insert data user to database\n  //     const response = await API.post(\"/login\", body, config);\n  //     //close & empty modal\n  //     setLogin(false);\n  //     setLogForm({ email: \"\", password: \"\" });\n  //     //notification & change state\n  //     if (response.data.status === \"success\") {\n  //       await dispatch({\n  //         type: \"LOGIN_SUCCESS\",\n  //         payload: response.data.data.user,\n  //       });\n  //       if (localStorage.token) {\n  //         setAuthToken(localStorage.token);\n  //       }\n  //       const alert = (\n  //         <Alert\n  //           variant=\"success\"\n  //           // onClose={() => setMessage(null)}\n  //           className=\"py-2 mb-0\"\n  //           style={{ textAlign: \"center\" }}\n  //           dismissible\n  //           onWaiting={() => setMessage(null)}\n  //         >\n  //           Login Success\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     } else {\n  //       const alert = (\n  //         <Alert\n  //           variant=\"danger\"\n  //           onClose={() => setMessage(null)}\n  //           className=\"py-1 mb-0\"\n  //           dismissible\n  //         >\n  //           Login Failed\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     }\n  //   } catch (error) {\n  //     const alert = (\n  //       <Alert\n  //         variant=\"danger\"\n  //         onClose={() => setMessage(null)}\n  //         className=\"py-1 mb-0\"\n  //         dismissible\n  //       >\n  //         Failed\n  //       </Alert>\n  //     );\n  //     setMessage(alert);\n  //     console.log(error);\n  //   }\n  // };\n  // const logout = () => {\n  //   dispatch({\n  //     type: \"LOGOUT\",\n  //     payload: \"\",\n  //   });\n  //   navigate(\"/\");\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/Icon.png\",\n        className: styles.icon,\n        alt: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), !state.isLogin ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handReg,\n        className: styles.Headerbtn,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handLog,\n        className: styles.Headerbtn,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this) : state.user.role === \"admin\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.buttons,\n      children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n        id: \"dropdown-basic\",\n        title: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.avatar,\n          src: state.user.photo,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: styles.dropdownItem,\n          to: \"/addproduct\",\n          style: {\n            textDecoration: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/add product.png\",\n            className: styles.dropdownPict,\n            alt: \"add product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.dropdownText,\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          className: styles.dropdownItem,\n          href: \"#\" // onClick={logout}\n          ,\n          style: {\n            padding: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/logout.png\",\n            className: styles.dropdownPict,\n            alt: \"logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.dropdownText,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/Cart.png\",\n          alt: \"cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), orderedMenus.subtotal === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"position-absolute translate-middle badge rounded-circle bg-danger\",\n          children: orderedMenus.subtotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n        id: \"dropdown-basic\",\n        title: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.avatar,\n          src: state.user.photo,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: styles.dropdownItem,\n          to: \"/profile\",\n          style: {\n            textDecoration: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/user.png\",\n            className: styles.dropdownPict,\n            alt: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.dropdownText,\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          className: styles.dropdownItem,\n          href: \"#\" // onClick={logout}\n          ,\n          style: {\n            padding: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/logout.png\",\n            className: styles.dropdownPict,\n            alt: \"logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.dropdownText,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: register,\n      onHide: handRegClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: \"Already have an account ? Klik Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navbar, \"0Rm8LrOvikq11rqH6P+nfWCv280=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/physicoornea/Documents/Documents/Waysbeans-main/Client/src/components/Navbar.js"],"names":["styles","React","useState","useContext","useNavigate","Modal","Dropdown","NavDropdown","Alert","Link","UserContext","OrderContext","API","setAuthToken","Navbar","navigate","register","setRegister","login","setLogin","state","dispatch","orderedMenus","setOrderedMenus","message","setMessage","handRegClose","handReg","handLogClose","handLog","icon","isLogin","buttons","Headerbtn","user","role","avatar","photo","dropdownItem","textDecoration","dropdownPict","dropdownText","padding","subtotal"],"mappings":"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","sourcesContent":["//import \"./Header.css\";\nimport styles from \"../styles/Navbar.module.css\";\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal, Dropdown, NavDropdown, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n//context\nimport { UserContext } from \"../context/userContext\";\nimport { OrderContext } from \"../context/orderContext\";\n\n//API config\nimport { API, setAuthToken } from \"../config/api\";\n\nfunction Navbar() {\n  let navigate = useNavigate();\n  //state\n  const [register, setRegister] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [state, dispatch] = useContext(UserContext);\n  const [orderedMenus, setOrderedMenus] = useContext(OrderContext);\n  //const [counterCart, setCounterCart] = useState(0);\n  const [message, setMessage] = useState(null);\n\n  //Register modal toggle\n  const handRegClose = () => setRegister(false);\n  const handReg = () => setRegister(true);\n\n  //login modal toggle\n  const handLogClose = () => setLogin(false);\n  const handLog = () => setLogin(true);\n\n  //register form (state)\n  // const [regForm, setRegForm] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  //   fullname: \"\",\n  // });\n  // const { email, password, fullname } = regForm;\n\n  // //login form (state)\n  // const [logForm, setLogForm] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n  // const { logEmail, logPassword } = logForm;\n\n  // const handleRegChange = (e) => {\n  //   setRegForm({\n  //     ...regForm,\n  //     [e.target.name]: e.target.value,\n  //   });\n  // };\n  // const handleLogChange = (e) => {\n  //   setLogForm({\n  //     ...logForm,\n  //     [e.target.name]: e.target.value,\n  //   });\n  // };\n\n  // //register handle\n  // const handleRegister = async (e) => {\n  //   try {\n  //     e.preventDefault();\n\n  //     // Create Configuration Content-type\n  //     const config = {\n  //       headers: {\n  //         \"Content-type\": \"application/json\",\n  //       },\n  //     };\n\n  //     // Convert form data to string\n  //     const body = JSON.stringify(regForm);\n\n  //     // Insert data user to database\n  //     const response = await API.post(\"/register\", body, config);\n\n  //     //close & empty modal\n  //     setRegister(false);\n  //     setRegForm({\n  //       email: \"\",\n  //       password: \"\",\n  //       fullName: \"\",\n  //     });\n\n  //     //notification\n  //     if (response.data.status === \"success\") {\n  //       const alert = (\n  //         <Alert\n  //           variant=\"success\"\n  //           onClose={() => setMessage(null)}\n  //           className=\"py-2 mb-0\"\n  //           dismissible\n  //         >\n  //           Registration Success\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     } else {\n  //       const alert = (\n  //         <Alert\n  //           variant=\"danger\"\n  //           onClose={() => setMessage(null)}\n  //           className=\"py-1\"\n  //           dismissible\n  //         >\n  //           Failed\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     }\n  //   } catch (error) {\n  //     const alert = (\n  //       <Alert\n  //         variant=\"danger\"\n  //         onClose={() => setMessage(null)}\n  //         className=\"py-1\"\n  //         dismissible\n  //       >\n  //         Failed\n  //       </Alert>\n  //     );\n  //     setMessage(alert);\n  //     console.log(error);\n  //   }\n  // };\n\n  // //login handle\n  // const handleLogin = async (e) => {\n  //   try {\n  //     e.preventDefault();\n\n  //     // Create Configuration Content-type\n  //     const config = {\n  //       headers: {\n  //         \"Content-type\": \"application/json\",\n  //       },\n  //     };\n  //     // Convert form data to string\n  //     const body = JSON.stringify(logForm);\n\n  //     // Insert data user to database\n  //     const response = await API.post(\"/login\", body, config);\n\n  //     //close & empty modal\n  //     setLogin(false);\n  //     setLogForm({ email: \"\", password: \"\" });\n\n  //     //notification & change state\n  //     if (response.data.status === \"success\") {\n  //       await dispatch({\n  //         type: \"LOGIN_SUCCESS\",\n  //         payload: response.data.data.user,\n  //       });\n  //       if (localStorage.token) {\n  //         setAuthToken(localStorage.token);\n  //       }\n\n  //       const alert = (\n  //         <Alert\n  //           variant=\"success\"\n  //           // onClose={() => setMessage(null)}\n  //           className=\"py-2 mb-0\"\n  //           style={{ textAlign: \"center\" }}\n  //           dismissible\n  //           onWaiting={() => setMessage(null)}\n  //         >\n  //           Login Success\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     } else {\n  //       const alert = (\n  //         <Alert\n  //           variant=\"danger\"\n  //           onClose={() => setMessage(null)}\n  //           className=\"py-1 mb-0\"\n  //           dismissible\n  //         >\n  //           Login Failed\n  //         </Alert>\n  //       );\n  //       setMessage(alert);\n  //     }\n  //   } catch (error) {\n  //     const alert = (\n  //       <Alert\n  //         variant=\"danger\"\n  //         onClose={() => setMessage(null)}\n  //         className=\"py-1 mb-0\"\n  //         dismissible\n  //       >\n  //         Failed\n  //       </Alert>\n  //     );\n  //     setMessage(alert);\n  //     console.log(error);\n  //   }\n  // };\n\n  // const logout = () => {\n  //   dispatch({\n  //     type: \"LOGOUT\",\n  //     payload: \"\",\n  //   });\n  //   navigate(\"/\");\n  // };\n\n  return (\n    <nav>\n      <Link to=\"/\">\n        <img src=\"./images/Icon.png\" className={styles.icon} alt=\"icon\" />\n      </Link>\n      {!state.isLogin ? (\n        <span className={styles.buttons}>\n          <button onClick={handReg} className={styles.Headerbtn}>\n            Register\n          </button>\n          <button onClick={handLog} className={styles.Headerbtn}>\n            Login\n          </button>\n        </span>\n      ) : state.user.role === \"admin\" ? (\n        <span className={styles.buttons}>\n          <NavDropdown\n            id=\"dropdown-basic\"\n            title={\n              <img\n                className={styles.avatar}\n                src={state.user.photo}\n                alt=\"avatar\"\n              />\n            }\n          >\n            <Link\n              className={styles.dropdownItem}\n              to=\"/addproduct\"\n              style={{ textDecoration: \"none\" }}\n            >\n              <img\n                src=\"./images/add product.png\"\n                className={styles.dropdownPict}\n                alt=\"add product\"\n              />\n              <span className={styles.dropdownText}>Add Product</span>\n            </Link>\n            <Dropdown.Divider />\n            <Dropdown.Item\n              className={styles.dropdownItem}\n              href=\"#\"\n              // onClick={logout}\n              style={{ padding: 0 }}\n            >\n              <img\n                src=\"./images/logout.png\"\n                className={styles.dropdownPict}\n                alt=\"logout\"\n              />\n              <span className={styles.dropdownText}>Logout</span>\n            </Dropdown.Item>\n          </NavDropdown>\n        </span>\n      ) : (\n        <span className={styles.buttons}>\n          <Link to=\"/cart\">\n            <img src=\"./images/Cart.png\" alt=\"cart\" />\n            {orderedMenus.subtotal === 0 ? (\n              <span />\n            ) : (\n              <span className=\"position-absolute translate-middle badge rounded-circle bg-danger\">\n                {orderedMenus.subtotal}\n              </span>\n            )}\n          </Link>\n          <NavDropdown\n            id=\"dropdown-basic\"\n            title={\n              <img\n                className={styles.avatar}\n                src={state.user.photo}\n                alt=\"avatar\"\n              />\n            }\n          >\n            <Link\n              className={styles.dropdownItem}\n              to=\"/profile\"\n              style={{ textDecoration: \"none\" }}\n            >\n              <img\n                src=\"./images/user.png\"\n                className={styles.dropdownPict}\n                alt=\"profile\"\n              />\n              <span className={styles.dropdownText}>Profile</span>\n            </Link>\n            <Dropdown.Divider />\n            <Dropdown.Item\n              className={styles.dropdownItem}\n              href=\"#\"\n              // onClick={logout}\n              style={{ padding: 0 }}\n            >\n              <img\n                src=\"./images/logout.png\"\n                className={styles.dropdownPict}\n                alt=\"logout\"\n              />\n              <span className={styles.dropdownText}>Logout</span>\n            </Dropdown.Item>\n          </NavDropdown>\n        </span>\n      )}\n\n      <Modal show={register} onHide={handRegClose}>\n        <Modal.Header>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <form className={styles.loginform} onSubmit={handleRegister}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              // onChange={handleRegChange}\n              // value={email}\n              name=\"email\"\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              // onChange={handleRegChange}\n              // value={password}\n              name=\"password\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Full Name\"\n              // onChange={handleRegChange}\n              // value={fullname}\n              name=\"fullname\"\n            />\n            <button type=\"submit\">Register</button>\n          </form> */}\n        </Modal.Body>\n        <Modal.Footer>Already have an account ? Klik Here</Modal.Footer>\n      </Modal>\n      {/* <Modal show={login} onHide={handLogClose}>\n        <Modal.Header>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form className={styles.loginform} onSubmit={handleLogin}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              id=\"email\"\n              onChange={handleLogChange}\n              required\n              value={logEmail}\n              name=\"email\"\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={handleLogChange}\n              value={logPassword}\n              name=\"password\"\n            />\n            <button type=\"submit\">Login</button>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>Don't have an account ? Klik Here</Modal.Footer>\n      </Modal> */}\n    </nav>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}